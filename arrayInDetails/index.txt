[] => This is called an Array []
typeof is used to check the type of element you have
Array is an object

for of loop also works like for loop

Replace: 
Push method is used to add new element to  the end of an array

Pop method is used to remove the last element from the end of an array

Shift removes the first element from the array

Unshift adds an eement to the beginning of an array

Splice works in 3 dimension.

=> (2, 1, 'a', 'b'): This would determine where the new element would be placed. adds 2 words and remove one from the words written before

=> (2): This would just remove every other word from the number inserted in the parenthesis

=> (2, 1): This would remove just one word from the consoled word.

Slice method (2, 5)=> This would exclude everything that is outside the index that is mentioned

Slice that is listed as a ONE WORD would cut everything till it gets to the index inserted.

indexOf is used to find the index of a first occurence of the first specified element of an array

If an element is not found while checking for an indexOf, it will console -1.

For each () is 
the syntax of forEach is: .forEach(value, i, array).

Map method () of array instances creates a new array populated with the results of calling a provided function on every element in the calling array. This method can be used to puut in new statements into an already existing array


Filter method () is used to get particular properties from an array.

Find method () is used to get  an element from an array

Some method () checks if some of the properties in an array meets a particular condition.
The some() method checks if any array elements pass a test (provided as a callback function).
The some() method executes the callback function once for each array element.
The some() method returns true (and stops) if the function returns true for one of the array elements.
The some() method returns false if the function returns false for all of the array elements.
The some() method does not execute the function for empty array elements.
The some() method does not change the original array.

//ARRAY EVERY () => The every() method executes a function for each array element.
The every() method returns true if the function returns true for all elements.
The every() method returns false if the function returns false for one element.
The every() method does not execute the function for empty elements.
The every() method does not change the original array.
Every() checks if all of the properties in an array meets a particular  condition.

Array Reduce() loops through the array and return the sum of the array. It takes two properties: a callback function and an initial value. the call back function takes two parameters which are acccumulator and value,